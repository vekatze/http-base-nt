import {
  core.function {compose},
  zonk.move.parse {chunk, drop-while, take-while, zonk},
}

define _is-space(r: rune): bool {
  if eq-rune(r, ` `) {
    True
  } else-if and(le-rune(`\u{9}`, r), le-rune(r, `\u{d}`)) {
    True
  } else {
    False
  }
}

define _is-colon(r: rune): bool {
  eq-rune(r, `:`)
}

inline _skip-space: zonk(unit) {
  drop-while(_is-space)
}

define _symbol: zonk(text) {
  take-while(compose(not, _is-space))
}

define _until-newline: zonk(text) {
  take-while(function (r) {
    ne-rune(r, `\r`)
  })
}

define _http-line-break: zonk(unit) {
  chunk("\r\n")
}

define _read-all: zonk(text) {
  take-while(function (_) {
    True
  })
}

define _is-status-code-number(r: rune): bool {
  and(le-rune(`0`, r), le-rune(r, `9`))
}
