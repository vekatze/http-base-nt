import {
  this.entity.private.parse {_symbol},
  this.entity.request-method {
    DELETE,
    GET,
    HEAD,
    OPTIONS,
    PATCH,
    POST,
    PUT,
    TRACE,
    request-method,
  },
  zonk.parser {fail, parser, return, zonk},
  zonk.tag {Label},
}

define request-method-parser(): parser(request-method) {
  with zonk {
    bind method-text = _symbol() in
    let method-or-none on method-text =
      if eq-text(method-text, "GET") {
        Right(GET)
      } else-if eq-text(method-text, "HEAD") {
        Right(HEAD)
      } else-if eq-text(method-text, "POST") {
        Right(POST)
      } else-if eq-text(method-text, "PUT") {
        Right(PUT)
      } else-if eq-text(method-text, "DELETE") {
        Right(DELETE)
      } else-if eq-text(method-text, "OPTIONS") {
        Right(OPTIONS)
      } else-if eq-text(method-text, "TRACE") {
        Right(TRACE)
      } else-if eq-text(method-text, "PATCH") {
        Right(PATCH)
      } else {
        Left(Unit)
      }
    in
    let _ = method-text in
    match method-or-none {
    | Right(method) =>
      return(method)
    | Left(_) =>
      fail([Label("request method")])
    }
  }
}
