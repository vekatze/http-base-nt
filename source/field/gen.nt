import {
  noa.gen {Gen, gen},
  noa.gen.pairs {pairs},
  this.field {Field, field},
  this.field.show,
  this.private.gen {Config, adjusted-texts},
}

constant _kvs: gen(pair(text, text)) {
  let rune-blacklist = [` `, `\u{8}`, `\u{9}`, `\u{a}`, `\u{b}`, `\u{c}`, `\u{d}`, `:`] in
  let c = Config of {blacklist = rune-blacklist, min-length = 1} in
  let !text-gen = adjusted-texts(c) in
  pairs(!text-gen, !text-gen)
}

constant fields: gen(field) {
  Gen of {
    generate = {
      function (size) {
        let Pair(key, value) = _kvs::generate(size) in
        Field of {key, value}
      }
    },
    shrink = {
      function (f: field) {
        let Field of {key, value} = f in
        let cands = _kvs::shrink(Pair(key, value)) in
        for-each(cands, function (p) {
          let Pair(key, value) = p in
          Field of {key, value}
        })
      }
    },
    viewer = this.field.show.as-show,
  }
}
